
/* Find Students that finished together; During the same Academic/Term */


drop table #Latest_Course;

SELECT * INTO #Latest_Course from (
SELECT *,
ROW_NUMBER() OVER(PARTITION BY  [Enquiry Token]
ORDER BY ([Course Start Date])desc,([ActualEndDate]) desc) AS rank FROM (
SELECT DISTINCT
[Opportunity id] as OpportunityID,
	[Enquiry Token]
	,[Center]
	,[Course Ref]
	,Program_Group__c AS [Program Group]
	,[Course Title]
	,[Course Start Date]
	,[Course End Date]
	,isnull([Actual End Date],[Course End Date]) AS [ActualEndDate]
	,StudyStartDate
	,StudyEndDate
	,[Source of Application]
	, 
	case when  [Study Plan] in ('AE+PW','AE+GPW','AE+UTP','Standalone PW','Standalone GPW','Standalone UTP') 
	then 'Ok' else 'No' end [include]
FROM 
	vStudentVolume AS m1
WHERE 
m1.[Last Decision] IN ('Offer / Admit', 'Provisional', 'Conditional','Pre-Admit', 'Pre-Offer') 
AND m1.[Last Response] IN ('Confirmed','Sponsored', 'Confirmed At Start')
) AS A 

)a

select * from (

select rts.Term,
ROW_NUMBER() OVER(PARTITION BY  [Opportunity ID]
ORDER BY (MaxCourseStart)desc) AS rank2 , last1.* from 
(

select * from(

SELECT *
,
ROW_NUMBER() OVER(PARTITION BY  [Opportunity ID]
ORDER BY ([ActualEndDate])desc) AS rank 
FROM (

	SELECT DISTINCT
		  [Opportunity ID]
		 ,vs.[Enquiry Token]
		 ,vS.Center
		 ,[Student First Name]
		 ,[Student Last Name]
		 ,[StudentID]
		 ,Nationality
		 ,[Student Dual Citizen Flag]
		 ,[Student Dual Citizen Country]
		 ,INTO_Centre_Country__c
		 ,[Agent Name]
		 ,[Agent URN]
		 ,[Agent Regional Hierarchy]
		 ,[Agent Shipping Address Country]
		 ,[Study Plan]
		 ,vs.[StudyStartDate]
		 ,vs.[StudyEndDate]	
		 ,vs.[Course Ref]
		 ,vs.Program_Group__c
		 ,vs.[Course Start Date]
		 ,vs.[Course End Date]
		 ,[Last Decision]
		 ,[Last Response]
		 ,[Registration Status]
		 ,[Last Decision Date]
		 ,[Last Response Date]
		 ,[Actual End Date]
		 ,ISNULL(vs.[Actual End Date],vs.[Course End Date]) AS ActualEndDate
		 ,[ProductID]
		 ,[Program Type]
		 ,[Course Name]
		 ,vs.[Course Title]
		 ,[Course Sub Group]
		 ,[Term Structure Course Name]
		 ,vs.Program AS [Program Group Summary]
		 ,[Master Course] AS [Master Course Name]
		 ,[Include In MIS Flag]
		 ,[Student Type]
		 ,vs.[Source of Application]
		 ,[Offer Declined Cancelled]
		 ,[Product CRS Code]
		 ,[Master Course]
		 ,[Enrollment Type]
		 ,[Students Remote Location]
		 ,[Method of Delivery]
		 ,[Master Program Name] 
		 --,rts.Term
		 ,case when Is_Eligible_to_Matriculate__c='Yes' then 'Yes'
		 when Is_Eligible_to_Matriculate__c='No' then 'No'
		-- when Is_Eligible_to_Matriculate__c is null and rts.Term='Spring 2020' then 'Center did not populate'
		 when Is_Eligible_to_Matriculate__c is null and vs.[Course End Date] < getdate() then 'Center did not populate'
		 when Is_Eligible_to_Matriculate__c is null   then 'Currently studying' 
		 end Eligible_to_Matriculate
FROM 
#Latest_Course as lts
inner join
vStudentVolume vs on lts.OpportunityID=vs.[Opportunity ID]
and lts.[Course Ref]=vs.[Course Ref]and lts.rank=1
left join 
(select 
distinct Application__c,Term__c,Is_Eligible_to_Matriculate__c
,c.name as Program

FROM 
 [SF_Backups].[dbo].[Study_Plan__c] AS  SP  
inner JOIN [SF_Backups].[dbo].[Study_Plan_Item__c] AS SPI 
ON SP.Id=SPI.Study_Plan__c 
left join [SF_Backups].[dbo].product2 c on c.id=product__c
where sp.RecordTypeId='0123A000001O9EPQA0'
and sp.Is_Active__c='true'
and is_valid__c = 'true' and spi.Sort_Order__c= (select max(Sort_Order__c) 
FROM 
 [SF_Backups].[dbo].[Study_Plan__c] AS  SP2  
inner JOIN [SF_Backups].[dbo].[Study_Plan_Item__c] AS SPI2
ON SP2.Id=SPI2.Study_Plan__c 
where sp2.RecordTypeId='0123A000001O9EPQA0'
and sp2.Is_Active__c='true'
and SPI2.is_valid__c='true'

and sp2.Application__c=sp.Application__c
)
)Matr on lts.OpportunityID=Matr.Application__c and Matr.Program=[Course Name]


where
vs.[Registration Status]in ('Ex-Student','Current Student')
and [include]='ok'
and vs.Program_Group__c not like '%Degree%'
and lts.[ActualEndDate] between '20191101' and '20200831'
--and [opportunity id]='0061p00000ggbu8AAA'

)a
)b where rank=1)last1
INNER JOIN [CUSTOM_TABLES_USA].[dbo].[USA_Reporting_Term_Structure] AS rts ON rts.[Center]=last1.Center 
where 
(last1.[Course Start Date] BETWEEN rts.MinCourseStart AND rts.MaxCourseStart
OR last1.[Course Start Date] <= rts.MinCourseStart AND last1.[Course End Date] >= DATEADD(Day, Datediff(Day,-14, rts.MinCourseStart), 0))
AND ( last1.[ActualEndDate] >= rts.MinCourseStart)
AND rts.Term  IN('Spring 2020','Summer 2020','Fall 2019','Winter 2020')
AND rts.Exclude=0
AND rts.FullTerm=1)x where rank2=1

order by [Opportunity ID]
--2484

